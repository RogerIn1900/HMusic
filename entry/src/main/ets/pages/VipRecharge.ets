import { router } from '@kit.ArkUI';
import promptAction from '@ohos.promptAction';

// È°µÈù¢ÂÖ•Âè£ÂáΩÊï∞
@Builder
export function VipRechargeBuilder() {
  VipRecharge()
}

// VIPÂ•óÈ§êÁ±ªÂûãÂÆö‰πâ
class VipPlan {
  id: number = 0
  name: string = ''
  price: string = ''
  originalPrice: string = ''
  unit: string = ''
  desc: string = ''
  badge: string = ''
}

// VIPÊùÉÁõäÁ±ªÂûãÂÆö‰πâ
class VipRight {
  icon: string = ''
  title: string = ''
  desc: string = ''
}

@Entry
@Component
struct VipRecharge {
  @State selectedPlan: number = 1 // ÈªòËÆ§ÈÄâ‰∏≠ËøûÁª≠ÂåÖÊúà
  
  // VIPÂ•óÈ§êÊï∞ÊçÆ
  private vipPlans: VipPlan[] = [
    { 
      id: 0, 
      name: 'ËøûÁª≠ÂåÖÊúà', 
      price: '12', 
      originalPrice: '15',
      unit: 'ÂÖÉ/Êúà',
      desc: 'Ëá™Âä®Áª≠Ë¥πÔºåÈöèÊó∂ÂèñÊ∂à',
      badge: 'È¶ñÊúàÁâπÊÉ†'
    },
    { 
      id: 1, 
      name: 'ËøûÁª≠ÂåÖÂπ¥', 
      price: '108', 
      originalPrice: '180',
      unit: 'ÂÖÉ/Âπ¥',
      desc: 'Âπ≥Âùá‰ªÖÈúÄ9ÂÖÉ/Êúà',
      badge: 'Ë∂ÖÂÄºÊé®Ëçê'
    },
    { 
      id: 2, 
      name: 'ÂçïÊúàÂç°', 
      price: '15', 
      originalPrice: '',
      unit: 'ÂÖÉ/Êúà',
      desc: '‰∏ÄÊ¨°ÊÄßË¥≠‰π∞ÔºåÊó†ÈúÄÁª≠Ë¥π',
      badge: ''
    }
  ]
  
  // VIPÊùÉÁõäÂàóË°®
  private vipRights: VipRight[] = [
    { icon: 'üéµ', title: 'Êµ∑ÈáèÊõ≤Â∫ì', desc: 'ÁïÖÂê¨ÂçÉ‰∏áÊ≠£ÁâàÈü≥‰πê' },
    { icon: 'üì±', title: 'Â§öÁ´ØÂêåÊ≠•', desc: 'ÊâãÊú∫„ÄÅÂπ≥Êùø„ÄÅÁîµËÑëÂêåÊ≠•' },
    { icon: 'üéß', title: 'Ë∂ÖÊ∏ÖÈü≥Ë¥®', desc: 'Êó†ÊçüÈü≥Ë¥®Ôºå‰∫´ÂèóÊûÅËá¥‰ΩìÈ™å' },
    { icon: 'üì•', title: 'Êó†Èôê‰∏ãËΩΩ', desc: 'Á¶ªÁ∫øÁïÖÂê¨ÔºåÈöèÊó∂ÈöèÂú∞' },
    { icon: 'üéÅ', title: '‰∏ìÂ±ûÁâπÊùÉ', desc: 'VIP‰∏ìÂ±ûÊ≠åÂçïÂíåÊ¥ªÂä®' },
    { icon: 'üö´', title: 'ÂéªÂπøÂëä', desc: 'ÁïÖ‰∫´Êó†ÊâìÊâ∞Èü≥‰πê‰ΩìÈ™å' }
  ]
  
  build() {
    Column() {
      // È°∂ÈÉ®ÂØºËà™Ê†è
      Row() {
        Image($r('app.media.ic_back'))
          .width(24)
          .height(24)
          .fillColor('#333333')
          .onClick(() => {
            router.back()
          })
        
        Text('ÂºÄÈÄöÈªëËÉ∂VIP')
          .fontSize(18)
          .fontWeight(FontWeight.Medium)
          .fontColor('#333333')
          .layoutWeight(1)
          .textAlign(TextAlign.Center)
        
        // Âç†‰ΩçÔºå‰øùÊåÅÊ†áÈ¢òÂ±Ö‰∏≠
        Row().width(24).height(24)
      }
      .width('100%')
      .height(56)
      .padding({ left: 16, right: 16 })
      .backgroundColor('#FFFFFF')
      .border({ width: { bottom: 0.5 }, color: '#E0E0E0' })
      
      Scroll() {
        Column() {
          // VIP‰ºöÂëòÂç°Â±ïÁ§∫
          Column() {
            // ÈáëËâ≤Ê∏êÂèòËÉåÊôØ
            Column() {
              // VIPÊ†áÈ¢ò
              Row() {
                Text('ÈªëËÉ∂VIP')
                  .fontSize(28)
                  .fontWeight(FontWeight.Bold)
                  .fontColor('#FFFFFF')
                
                Text('‰ºöÂëò')
                  .fontSize(16)
                  .fontColor('rgba(255, 255, 255, 0.8)')
                  .margin({ left: 8, top: 8 })
              }
              .margin({ top: 30 })
              
              Text('Â∞ä‰∫´Èü≥‰πêÁîüÊ¥ª')
                .fontSize(14)
                .fontColor('rgba(255, 255, 255, 0.9)')
                .margin({ top: 8, bottom: 30 })
            }
            .width('100%')
            .linearGradient({
              angle: 135,
              colors: [['#FFD700', 0.0], ['#FFA500', 1.0]]
            })
            .borderRadius(20)
            .shadow({ radius: 20, color: 'rgba(255, 215, 0, 0.3)', offsetX: 0, offsetY: 10 })
          }
          .width('90%')
          .margin({ top: 20, bottom: 30 })
          
          // Â•óÈ§êÈÄâÊã©Ê†áÈ¢ò
          Text('ÈÄâÊã©Â•óÈ§ê')
            .fontSize(20)
            .fontWeight(FontWeight.Bold)
            .fontColor('#333333')
            .width('90%')
            .margin({ bottom: 16 })
          
          // VIPÂ•óÈ§êÂàóË°®
          Column({ space: 12 }) {
            ForEach(this.vipPlans, (plan: VipPlan) => {
              this.createPlanCard(plan)
            })
          }
          .width('90%')
          .margin({ bottom: 30 })
          
          // VIPÊùÉÁõäÊ†áÈ¢ò
          Text('VIPÊùÉÁõä')
            .fontSize(20)
            .fontWeight(FontWeight.Bold)
            .fontColor('#333333')
            .width('90%')
            .margin({ bottom: 16 })
          
          // VIPÊùÉÁõäÂàóË°®
          Column({ space: 16 }) {
            ForEach(this.vipRights, (right: VipRight) => {
              this.createRightItem(right)
            })
          }
          .width('90%')
          .margin({ bottom: 100 })
        }
        .width('100%')
      }
      .layoutWeight(1)
      .scrollBar(BarState.Off)
      
      // Â∫ïÈÉ®Ë¥≠‰π∞ÊåâÈíÆ
      Column() {
        // ‰ª∑Ê†º‰ø°ÊÅØ
        Row() {
          Text('¬•')
            .fontSize(18)
            .fontColor('#FF6B6B')
            .fontWeight(FontWeight.Bold)
          
          Text(this.vipPlans[this.selectedPlan].price)
            .fontSize(32)
            .fontColor('#FF6B6B')
            .fontWeight(FontWeight.Bold)
          
          if (this.vipPlans[this.selectedPlan].originalPrice) {
            Text('¬•' + this.vipPlans[this.selectedPlan].originalPrice)
              .fontSize(14)
              .fontColor('#999999')
              .decoration({ type: TextDecorationType.LineThrough })
              .margin({ left: 8 })
          }
        }
        .margin({ bottom: 12 })
        
        // Á´ãÂç≥ÂºÄÈÄöÊåâÈíÆ
        Button('Á´ãÂç≥ÂºÄÈÄö')
          .width('90%')
          .height(50)
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
          .fontColor('#FFFFFF')
          .backgroundColor('#FFD700')
          .borderRadius(25)
          .onClick(() => {
            // Ê®°ÊãüÊîØ‰ªòÊµÅÁ®ã
            promptAction.showToast({ 
              message: 'Ê≠£Âú®Ë∑≥ËΩ¨ÊîØ‰ªò...',
              duration: 2000
            })
            
            setTimeout(() => {
              promptAction.showToast({ 
                message: 'ÂºÄÈÄöÊàêÂäüÔºÅÊÑüË∞¢ÊÇ®ÁöÑÊîØÊåÅ',
                duration: 2000
              })
              setTimeout(() => {
                router.back()
              }, 2000)
            }, 1500)
          })
      }
      .width('100%')
      .padding({ top: 16, bottom: 16 })
      .backgroundColor('#FFFFFF')
      .border({ width: { top: 0.5 }, color: '#E0E0E0' })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
  }
  
  // ÂàõÂª∫Â•óÈ§êÂç°Áâá
  @Builder
  createPlanCard(plan: VipPlan) {
    Stack() {
      // Êé®ËçêÊ†áÁ≠æ
      if (plan.badge) {
        Text(plan.badge)
          .fontSize(12)
          .fontColor('#FFFFFF')
          .backgroundColor('#FF6B6B')
          .padding({ left: 12, right: 12, top: 4, bottom: 4 })
          .borderRadius({ topLeft: 20, bottomRight: 20 })
          .position({ x: 0, y: 0 })
          .zIndex(1)
      }
      
      Row() {
        // Â∑¶‰æß‰ø°ÊÅØ
        Column() {
          Text(plan.name)
            .fontSize(18)
            .fontWeight(FontWeight.Bold)
            .fontColor(this.selectedPlan === plan.id ? '#FFD700' : '#333333')
          
          Text(plan.desc)
            .fontSize(12)
            .fontColor('#999999')
            .margin({ top: 4 })
        }
        .alignItems(HorizontalAlign.Start)
        .layoutWeight(1)
        
        // ‰∏≠Èó¥‰ª∑Ê†º
        Column() {
          Row() {
            Text('¬•')
              .fontSize(14)
              .fontColor(this.selectedPlan === plan.id ? '#FFD700' : '#333333')
              .fontWeight(FontWeight.Bold)
            
            Text(plan.price)
              .fontSize(24)
              .fontColor(this.selectedPlan === plan.id ? '#FFD700' : '#333333')
              .fontWeight(FontWeight.Bold)
          }
          
          if (plan.originalPrice) {
            Text('¬•' + plan.originalPrice)
              .fontSize(12)
              .fontColor('#999999')
              .decoration({ type: TextDecorationType.LineThrough })
          }
        }
        .margin({ right: 16 })
        
        // Âè≥‰æßÈÄâÊã©Ê°Ü
        Stack() {
          Circle()
            .width(24)
            .height(24)
            .border({ 
              width: 2, 
              color: this.selectedPlan === plan.id ? '#FFD700' : '#CCCCCC' 
            })
            .backgroundColor(this.selectedPlan === plan.id ? '#FFD700' : '#FFFFFF')
          
          if (this.selectedPlan === plan.id) {
            Text('‚úì')
              .fontSize(14)
              .fontColor('#FFFFFF')
              .fontWeight(FontWeight.Bold)
          }
        }
      }
      .width('100%')
      .padding(16)
    }
    .width('100%')
    .backgroundColor(this.selectedPlan === plan.id ? 'rgba(255, 215, 0, 0.1)' : '#FFFFFF')
    .borderRadius(20)
    .border({ 
      width: 2, 
      color: this.selectedPlan === plan.id ? '#FFD700' : '#E0E0E0' 
    })
    .onClick(() => {
      this.selectedPlan = plan.id
    })
  }
  
  // ÂàõÂª∫ÊùÉÁõäÈ°π
  @Builder
  createRightItem(right: VipRight) {
    Row() {
      Text(right.icon)
        .fontSize(32)
        .width(50)
        .textAlign(TextAlign.Center)
      
      Column() {
        Text(right.title)
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
          .fontColor('#333333')
        
        Text(right.desc)
          .fontSize(14)
          .fontColor('#999999')
          .margin({ top: 4 })
      }
      .alignItems(HorizontalAlign.Start)
      .layoutWeight(1)
      .margin({ left: 16 })
    }
    .width('100%')
    .padding(16)
    .backgroundColor('#FFFFFF')
    .borderRadius(12)
  }
}

